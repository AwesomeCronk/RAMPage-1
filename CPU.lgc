$include memory/memory.py > mem
$include memory/fileMemory.py > fileMem
$include circuits/register08.lgc > reg08
$include circuits/register11.lgc > reg11


//// Main bus ////
ledBar bus[0..7] & 255 20 20  20 5

//// Paging bus ////

//// Memory ////
reg8 \low \low bus[2..7] controlMemAddrIn > null0 null1 memAddr[0..5]
reg8 bus[0..7] controlMemDataIn > memDataIn[0..7]

mem page[0..4] memAddr[0..5]]  memDataIn[0..7]  controlMemDataIn > memDataOut[0..7]
// fileMem page[0..4] memAddr[0..5]]  memDataIn[0..7]  controlMemDataIn > memDataOut[0..7] & ROM.bin
tristate memDataOut0 controlMemDataOut > bus0; tristate memDataOut1 controlMemDataOut > bus1; tristate memDataOut2 controlMemDataOut > bus2; tristate memDataOut3 controlMemDataOut > bus3
tristate memDataOut4 controlMemDataOut > bus4; tristate memDataOut5 controlMemDataOut > bus5; tristate memDataOut6 controlMemDataOut > bus6; tristate memDataOut7 controlMemDataOut > bus7


//// Registers ////


//// ALU ////

//// Control logic ////

// Instruction register
// Connects to all 5 bits of paging bus and lower 6 bits of main bus
regB page[0..4] bus[2..7] controlInsRegIn > insRegOut[00..10]

tristate insRegOut00 controlInsRegOut > page0
tristate insRegOut01 controlInsRegOut > page1
tristate insRegOut02 controlInsRegOut > page2
tristate insRegOut03 controlInsRegOut > page3
tristate insRegOut04 controlInsRegOut > page4
tristate insRegOut05 controlInsRegOut > bus2
tristate insRegOut06 controlInsRegOut > bus3
tristate insRegOut07 controlInsRegOut > bus4
tristate insRegOut08 controlInsRegOut > bus5
tristate insRegOut09 controlInsRegOut > bus6
tristate insRegOut10 controlInsRegOut > bus7
